# Agents configuration file



from configs.tools import *
from swarm import Agent

def manager_instructions():
    return """The Manager agent is the primary interface for user communication. It begins the process by receiving user input specifying the music genre. Once the genre input is confirmed, the manager transfers control to the Data Fetcher agent using the transfer_to_data_fetcher function."""


def transfer_to_data_fetcher():
    return data_fetcher


manager = Agent(
    name="manager",
    instructions=manager_instructions(),
    functions=[transfer_to_data_fetcher, initialize_process, transfer_to_data_fetcher],
)




def data_fetcher_instructions():
    return """The Data Fetcher agent's role is to connect to the Spotify API and collect data. It uses the fetch_spotify_data function to retrieve the top 20 songs of the specified genre, including popularity scores and listening timeframes. Following this, parse_song_data is used to interpret and structure this information effectively. Upon successful data collection and parsing, control is transferred to the Analyzer agent using the transfer_to_analyzer function."""


def transfer_to_analyzer():
    return analyzer


data_fetcher = Agent(
    name="data_fetcher",
    instructions=data_fetcher_instructions(),
    functions=[transfer_to_analyzer, fetch_spotify_data, parse_song_data],
)




def analyzer_instructions():
    return """The Analyzer agent processes the fetched song data to derive meaningful insights, trends, and information about popular artists and themes. It uses analyze_data to handle general data processing, extract_insights for focused insights extraction, and identify_trends to discover any noticeable trends within the data. Upon completing its analysis, the agent transfers control along with the insights to the Formatter agent using the transfer_to_formatter function."""


def transfer_to_formatter():
    return formatter


analyzer = Agent(
    name="analyzer",
    instructions=analyzer_instructions(),
    functions=[transfer_to_formatter, analyze_data, extract_insights, identify_trends],
)




def formatter_instructions():
    return """The Formatter agent's job is to take the insights generated by the Analyzer and turn them into a coherent, readable text summary. It employs the format_summary tool to structure the insights into a textual format suitable for terminal display. Once formatted, it uses display_output to present the summary to the user terminal. Finally, it passes control back to the Manager agent with the transfer_to_manager to conclude the session and allow for further user interaction or queries."""


def transfer_to_manager():
    return manager


formatter = Agent(
    name="formatter",
    instructions=formatter_instructions(),
    functions=[transfer_to_manager, format_summary, display_output],
)
